{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmNodeName": {
      "type": "string",
      "defaultValue": "SEPPmailNode",
      "metadata":{
        "description": "VM name, the index 1 and 2 will be added in the variables section."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
      }
    },
    "lbDnsLabelPrefix": {
      "type": "string",
      "defaultValue": "seppmaillb",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "node1DnsLabelPrefix": {
      "type": "string",
      "defaultValue": "seppmailnode2",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "node2DnsLabelPrefix": {
      "type": "string",
      "defaultValue": "seppmailnode2",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "SEPPmailOSVersion": {
      "type": "string",
      "defaultValue": "smvm12",
      "allowedValues": [
        "freedeploy",
        "smvm12"
      ],
      "metadata": {
        "description": "The SEPPmail version for the VM. This will pick a fully patched image of this given SEPPmail version."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "saseppmail",
      "metadata": {
        "description": "Name of the storage account for Boot Diagnostics."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "SEPPmailVNET"
    },
    "subNetName": {
      "type": "string",
      "defaultValue": "SEPPmailSubnet"
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "192.168.100.0/24" 
    },
    "subNetPrefix": {
      "type": "string",
      "defaultValue": "192.168.100.0/25"
    },
    "node1NicName": {
      "type": "string",
      "defaultValue": "SEPPmailNode1Nic"
    },
    "node2NicName": {
      "type": "string",
      "defaultValue": "SEPPmailNode2Nic"
    },
    "lbPublicIpName": {
      "type": "string",
      "defaultValue": "SEPPmailLbPublicIP"
    },
    "node1PublicIpName": {
      "type": "string",
      "defaultValue": "SEPPmailNode1PublicIP"
    },
    "node2PublicIpName": {
      "type": "string",
      "defaultValue": "SEPPmailNode2PublicIP"
    },
    "NSGName": {
      "type": "string",
      "defaultValue": "SEPPmailNSG"
    },
    "lbName": {
      "type": "string",
      "defaultValue": "armSEPPmailLB"
    }
  },
  "variables": {
    "imagePublisher": "seppmailag",
    "imageOffer": "seppmailvirtualmachine",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressType": "Static",
    "vmNode1Name": "[concat(parameters('vmNodeName'),'1')]",
    "vmNode2Name": "[concat(parameters('vmNodeName'),'2')]",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    },
    "subNetRef": "[resourceId('Microsoft.Network/virtualNetworks/subNets', parameters('virtualNetworkName'), parameters('subNetName'))]",
    "LbSMTPProbeName": "SMTP",
    "LbGINAProbeName": "GINA"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-04-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-07-01",
      "name": "[parameters('lbPublicIPName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('PublicIPAddressType')]",
        "dnsSettings": {
        "domainNameLabel": "[parameters('lbDnsLabelPrefix')]"
        }
      },
      "sku": {
        "name": "Standard"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-07-01",
      "name": "[parameters('node1PublicIpName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('PublicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('node1DnsLabelPrefix')]"
          }
        },
      "sku": {
        "name": "Standard"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-07-01",
      "name": "[parameters('node2PublicIpName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('PublicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('node2DnsLabelPrefix')]"
          }
        },
      "sku": {
        "name": "Standard"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('NSGName')]",
      "apiVersion": "2019-06-01",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SMTP",
            "properties": {
              "protocol": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "destinationPortRange": "25",
              "sourcePortRange": "*",
              "priority": 150,
              "direction": "Inbound"
            }
          },
          {
            "name": "GINA",
            "properties": {
              "protocol": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "destinationPortRange": "443",
              "sourcePortRange": "*",
              "priority": 175,
              "direction": "Inbound"
            }
          },
          {
            "name": "WebAdminPortal",
            "properties": {
              "protocol": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "destinationPortRange": "8443",
              "sourcePortRange": "*",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-06-01",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('NSGName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        },
        "subNets": [
          {
            "name": "[parameters('subNetName')]",
            "properties": {
              "addressPrefix": "[parameters('subNetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('NSGName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-11-01",
      "name": "[parameters('node1NicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('node1PublicIpName'))]",
        "[resourceId('Microsoft.Network/loadBalancers', parameters('lbName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "SEPPmailIp1Config",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('node1PublicIpName'))]"
              },
              "subNet": {
                "id": "[variables('subNetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('lbName')),'/backEndAddressPools/SEPPmailLbBackEndPool')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('lbName')),'/inboundNatRules/WebAdminNode1')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-11-01",
      "name": "[parameters('node2NicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('node2PublicIpName'))]",
        "[resourceId('Microsoft.Network/loadBalancers', parameters('lbName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "SEPPmailIp2Config",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('node2PublicIpName'))]"
              },
              "subNet": {
                "id": "[variables('subNetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('lbName')),'/backEndAddressPools/SEPPmailLbBackEndPool')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('lbName')),'/inboundNatRules/WebAdminNode2')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-06-01",
      "name": "[variables('vmNode1Name')]",
      "location": "[parameters('location')]",
      "plan": {
        "publisher": "seppmailag",
        "name": "[parameters('SEPPmailOSVersion')]",
        "product": "seppmailvirtualmachine"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('node1NicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmNode1Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('SEPPmailOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces/', parameters('node1NicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-06-01",
      "name": "[variables('vmNode2Name')]",
      "location": "[parameters('location')]",
      "plan": {
        "publisher": "seppmailag",
        "name": "[parameters('SEPPmailOSVersion')]",
        "product": "seppmailvirtualmachine"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('node2NicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmNode2Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('SEPPmailOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces/', parameters('node2NicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2019-06-01",
      "name": "[parameters('lbName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('lbPublicIpName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('node1PublicIPName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('node2PublicIPName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "SEPPmailLbFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('lbPublicIpName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "SEPPmailLbBackEndPool"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('lbName')),'/frontEndIPConfigurations/SEPPmailLbFrontEnd')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('lbName')), '/backendAddressPools/SEPPmailLbBackEndPool')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('lbName')), '/probes/SMTP')]"
              },
              "protocol": "Tcp",
              "loadDistribution": "SourceIPProtocol",
              "frontendPort": 25,
              "backendPort": 25,
              "idleTimeoutInMinutes": 4,
              "enableFloatingIP": false,
              "enableTcpReset": false,
              "disableOutboundSnat": false
            },
            "name": "SMTP"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('lbName')),'/frontEndIPConfigurations/SEPPmailLbFrontEnd')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('lbName')), '/backendAddressPools/SEPPmailLbBackEndPool')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('lbName')), '/probes/GINA')]"
              },
              "protocol": "Tcp",
              "loadDistribution": "SourceIPProtocol",
              "frontendPort": 443,
              "backendPort": 443,
              "idleTimeoutInMinutes": 4,
              "enableFloatingIP": false,
              "enableTcpReset": false,
              "disableOutboundSnat": false
            },
            "name": "GINA"
          }
        ],
        "probes": [
          {
            "name": "[variables('LbSMTPProbeName')]",
            "properties": {
              "protocol": "Tcp",
              "port": 25,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          },
          {
            "name": "[variables('LbGINAProbeName')]",
            "properties": {
              "protocol": "Https",
              "port": 443,
              "requestPath": "/web.app",
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ],
        "inboundNatRules": [
          {
            "name": "WebAdminNode1",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('lbName')), '/frontendIPConfigurations/SEPPmailLbFrontEnd')]"
              },
              "protocol": "Tcp",
              "frontendPort": 11443,
              "backendPort": 8443,
              "enableFloatingIP": false
            }
          },
          {
            "name": "WebAdminNode2",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('lbName')), '/frontendIPConfigurations/SEPPmailLbFrontEnd')]"
              },
              "protocol": "Tcp",
              "frontendPort": 12443,
              "backendPort": 8443,
              "enableFloatingIP": false
            }
          }
        ]
      }
    }
],
  "outputs": {
    "AdminPortalBrowserStringNode1": {
      "type": "string",
      "value": "[concat('https://', reference(parameters('node1PublicIpName')).dnsSettings.fqdn, ':11443')]"
    },
    "AdminPortalBrowserStringNode2": {
      "type": "string",
      "value": "[concat('https://', reference(parameters('node2PublicIpName')).dnsSettings.fqdn, ':12443')]"
    },
    "GINABrowserString": {
      "type": "string",
      "value": "[concat('https://', reference(parameters('lbPublicIpName')).dnsSettings.fqdn, '/web.app')]"
    },
    "MxRecord": {
      "type": "string",
      "value": "[concat(reference(parameters('lbPublicIpName')).dnsSettings.fqdn, ':25')]"
    }
  }
}
